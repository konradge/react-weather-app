{"version":3,"sources":["api/weatherstack.js","components/NewCitySearch.jsx","components/WeatherWidget.jsx","components/App.jsx","index.js"],"names":["axios","create","baseURL","params","defaultParams","access_key","NewCitySearch","state","searchTerm","e","this","setState","target","value","keyCode","props","getWeather","className","type","placeholder","onChange","handleChange","bind","onKeyDown","keyPress","message","React","Component","WeatherWidget","weather","status","coordSearch","getCoordinates","window","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","err","weatherstack","get","query","data","error","info","addWidget","style","current","is_day","localtime","Date","location","onClick","onDelete","id","name","country","getHours","getMinutes","src","weather_icons","alt","weather_descriptions","temperature","size","humidity","feelslike","wind_speed","App","widgets","buildWidget","autoSearch","key","deleteWidget","push","filter","elem","elems","map","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.87f211c0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://cors-anywhere.herokuapp.com/http://api.weatherstack.com\",\r\n  params: {},\r\n});\r\n\r\nexport const defaultParams = {\r\n  access_key: \"ad1cb301e33bda6b58fe2b88916662ec\",\r\n};\r\n","import React from \"react\";\r\n\r\nexport default class NewCitySearch extends React.Component {\r\n  state = { searchTerm: \"\" };\r\n  handleChange(e) {\r\n    this.setState({ searchTerm: e.target.value });\r\n  }\r\n\r\n  keyPress(e) {\r\n    if (e.keyCode === 13) {\r\n      this.props.getWeather(this.state.searchTerm);\r\n      this.setState({ searchTerm: \"\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"widget search\">\r\n        <div className=\"ui icon header\">\r\n          <i className=\"search icon\"></i>\r\n          New City\r\n        </div>\r\n        <div className=\"field\">\r\n          <div className=\"ui search\">\r\n            <div className=\"ui icon input\">\r\n              <input\r\n                className=\"prompt\"\r\n                type=\"text\"\r\n                placeholder=\"Type in city name...\"\r\n                value={this.state.searchTerm}\r\n                onChange={this.handleChange.bind(this)}\r\n                onKeyDown={this.keyPress.bind(this)}\r\n              />\r\n              <i className=\"search icon\"></i>\r\n            </div>\r\n            <div>{this.props.message}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport weatherstack, { defaultParams } from \"../api/weatherstack\";\r\n\r\nimport \"./style.css\";\r\nimport NewCitySearch from \"./NewCitySearch\";\r\nimport { WiHumidity, WiThermometer, WiStrongWind } from \"weather-icons-react\";\r\nexport default class WeatherWidget extends React.Component {\r\n  state = {\r\n    weather: {},\r\n    message: \"\",\r\n    //0:Warte auf Sucheingabe, 1: Sucheingabe erfolgt 2:Search for coordinates\r\n    status: 0,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.coordSearch) {\r\n      this.getCoordinates();\r\n    }\r\n  }\r\n\r\n  getCoordinates() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (pos) =>\r\n        this.getWeather(pos.coords.latitude + \",\" + pos.coords.longitude),\r\n      (err) => this.setState({ status: 0, message: err.message })\r\n    );\r\n  }\r\n\r\n  async getWeather(searchTerm) {\r\n    this.setState({ message: \"Loading data from weatherstack.com...\" });\r\n    let weather = await weatherstack.get(\"/current\", {\r\n      params: {\r\n        ...defaultParams,\r\n        query: searchTerm,\r\n      },\r\n    });\r\n    if (weather.data.error) {\r\n      this.setState({ status: 0 });\r\n      this.setState({ message: weather.data.error.info });\r\n    } else {\r\n      this.setState({ weather: weather.data, status: 1 });\r\n      if (this.props.addWidget && !this.props.coordSearch) {\r\n        this.props.addWidget();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.status === 0) {\r\n      return (\r\n        <NewCitySearch\r\n          getWeather={this.getWeather.bind(this)}\r\n          message={this.state.message}\r\n        />\r\n      );\r\n    } else {\r\n      let style =\r\n        this.state.weather.current.is_day === \"no\"\r\n          ? \"widget darkmode\"\r\n          : \"widget lightmode\";\r\n      let localtime = new Date(this.state.weather.location.localtime);\r\n      return (\r\n        <div className={style}>\r\n          <div className=\"delete\">\r\n            <i\r\n              className=\"close icon\"\r\n              onClick={() => this.props.onDelete(this.props.id)}\r\n            ></i>\r\n          </div>\r\n          <div className=\"ui header location\">\r\n            {this.state.weather.location.name +\r\n              \", \" +\r\n              this.state.weather.location.country}\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"time\">\r\n              {localtime.getHours() +\r\n                \":\" +\r\n                (localtime.getMinutes() < 10 ? \"0\" : \"\") +\r\n                localtime.getMinutes()}\r\n            </div>\r\n            <div className=\"weather-temp\">\r\n              <img\r\n                src={this.state.weather.current.weather_icons[0]}\r\n                alt={this.state.weather.current.weather_descriptions[0]}\r\n              />\r\n              <div>{this.state.weather.current.temperature}°C</div>\r\n            </div>\r\n            <div className=\"humidity infos\">\r\n              <WiHumidity size={30} className=\"icon\" />\r\n              <div className=\"data\">\r\n                {this.state.weather.current.humidity}\r\n                <div className=\"small\">%</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"infos\">\r\n              <WiThermometer size={30} className=\"icon\" />\r\n              <div className=\"data\">\r\n                {this.state.weather.current.feelslike}\r\n                <div className=\"small\">°C</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"infos\">\r\n              <WiStrongWind size={30} className=\"icon\" />\r\n              <div className=\"data\">\r\n                {this.state.weather.current.wind_speed}\r\n                <div className=\"small\">km/h</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport WeatherWidget from \"./WeatherWidget\";\r\n\r\nimport \"./style.css\";\r\nexport default class App extends React.Component {\r\n  state = {\r\n    widgets: [this.buildWidget(true, \"main\"), this.buildWidget(false)]\r\n  };\r\n\r\n  buildWidget(autoSearch, id) {\r\n    return (\r\n      <WeatherWidget\r\n        addWidget={this.addWidget.bind(this)}\r\n        key={id ? id : new Date()}\r\n        id={id ? id : new Date()}\r\n        onDelete={this.deleteWidget.bind(this)}\r\n        coordSearch={autoSearch}\r\n      />\r\n    );\r\n  }\r\n\r\n  addWidget() {\r\n    this.state.widgets.push(this.buildWidget());\r\n    this.setState({\r\n      widgets: this.state.widgets\r\n    });\r\n  }\r\n  deleteWidget(id) {\r\n    this.setState({\r\n      widgets: this.state.widgets.filter(elem => elem.props.id !== id)\r\n    });\r\n  }\r\n  render() {\r\n    let elems = this.state.widgets.map(elem => elem);\r\n    return <div>{elems}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}